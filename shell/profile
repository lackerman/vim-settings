#!/bin/sh

#####################
# environment conf
#####################

command -v rbenv > /dev/null 2>&1 && eval "$(rbenv init -)"
command -v pyenv > /dev/null 2>&1 && MY_PATH_PREFIX="$(pyenv root)/shims"

MY_PATH_SUFFIX="${KREW_ROOT:-$HOME/.krew}/bin:$HOME/.dotfiles/scripts"
command -v go > /dev/null 2>&1 && MY_PATH_PREFIX="$PATH_SUFFIX:$(go env GOPATH)/bin"

export PATH="$MY_PATH_PREFIX:$PATH:$MY_PATH_SUFFIX"
export EDITOR=vim
export KUBE_EDITOR="vim"
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

if [ "$(uname)" = 'Linux' ]; then
    alias ls='ls --color=auto'

    # https://serverfault.com/questions/716350/mount-nfs-volume-on-ubuntu-linux-server-from-macos-client
    alias nfs_reload="sudo vi /etc/exports && sudo exportfs -vra"
else
    alias ls='ls -G'
fi

alias vi=vim
alias ll='ls -l'

#####################
# network utils
#####################

whoislistening() {
    sudo lsof -i -n -P | grep LISTEN
}

ipinfo() {
    public_ip="$(curl -sL http://ipecho.net/plain)"
	raw_info="$(curl -s "https://ipapi.co/${public_ip}/json" | \
        jq -r '[.ip, .org, .city, .region, .country_name, .country] | @csv')"
    echo "${raw_info//\"}"
}

#####################
# docker utilities
#####################

alias dps='docker ps -a'
alias dk='docker kill'
alias drm='docker rm'
alias dim='docker images'
alias dimr='docker rmi'

drma() {
    docker rm $(docker ps -a -q)
}

dang() {
    docker rmi $(docker images --quiet --filter "dangling=true")
}

dimrn() {
    docker images -a | grep "$1" | awk '{print $3}' | xargs docker rmi -f
}

docker_gitlab_login() {
    [ -z "$1" ] && echo 'provide the TOKEN file as a parameter' && exit 1
    docker login -u "$USER" registry.gitlab.com --password-stdin < "$1"
}

#####################
# kubectl utils
#####################

alias k=kubectl
alias ka='kubectl get all'
alias kd='kubectl delete'
alias kl='kubectl logs'
alias kw='kubectl get pods -w'
alias klc='kubectl config get-contexts'
kcc() {
    kubectl config use-context "$(klc | fzf -e | sed "s/^..//")"
}
kpa() {
    kubectl get pods -l name="$1" -o jsonpath='{.items[0].metadata.name}'
}
kcssh() {
    kubectl exec -it "$@" -- /bin/sh
}
kssh() {
    kubectl exec -it "$@" -c app -- /bin/sh
}
kstat() {
    kubectl get -o json pod "$@" | \
    jq --compact-output '[.status.containerStatuses[], .status.initContainerStatuses[]] | .[] | { name: .name, state: .state | keys | .[], info: .state[].reason }'
}

#####################
# git aliases & utils
#####################

alias gs='git status -uno'
alias gsp='git add . && git stash && git pull --rebase && git stash pop'
alias git_ls_commit_files='git diff-tree --no-commit-id --name-only -r'
alias git_submodule_update='git submodule update --recursive --remote'
alias git_submodule_clone='git submodule update --init --recursive'

#####################
# general utils
#####################

dirdiff() {
    diff --brief --recursive --no-dereference --new-file --no-ignore-file-name-case "$1" "$2"
}
